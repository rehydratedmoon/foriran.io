---
import { getCollection } from 'astro:content';
import PostLayout from '../../layouts/PostLayout.astro';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}
// 2. When it's time to render, you can get the entry directly from the prop
const { post } = Astro.props;
const { Content, headings } = await post.render();
---

<PostLayout title={post.data.title + ' | برای ایران'} headings={headings}>
  <article class='article__wrapper'>
    <!-- <h1>{post.data.title}</h1> -->
    {!headings.some((h) => h.depth === 1) && <h1>{post.data.title}</h1>}
    <Content />
  </article>
</PostLayout>

<style lang='scss' is:global>
  .article__wrapper > * + * {
    margin-top: 1em;
  }

  .article__wrapper > video,
  .article__wrapper > img,
  .article__wrapper > figure,
  .article__wrapper > iframe {
    margin-bottom: 3rem;
    margin-top: 3rem;
    border-radius: 0.75rem;
  }

  .article__wrapper {
    h1:not([class]) {
      font-size: 3rem;
      font-weight: 900;
      line-height: 1.5;
      margin-bottom: 3em;
      letter-spacing: -0.025em;
      color: var(--rdx-colors-prm-12);
      padding-bottom: 0.3em;
    }

    @media screen and (min-width: 40.01rem) {
      .article h1:not([class]) {
        font-size: 4.5rem;
      }
    }

    h2:not(.unstyled) {
      font-size: 1.875rem;
      line-height: 3.5rem;
      letter-spacing: -0.0125em;
      font-weight: 900;
      line-height: 1.5;
      width: fit-content;
      color: var(--rdx-colors-prm-11);

      display: flex;
      gap: 1rem;
      justify-content: stretch;
      align-items: center;
      width: 100%;
    }

    h2:not(.unstyled)::after {
      content: '';
      flex: 1;
      background-color: currentColor;
      height: 1px;
      opacity: 50%;
    }

    h3:not(.unstyled) {
      font-size: 1.5rem;
      line-height: 3rem;
      font-weight: 900;
      width: fit-content;
      color: var(--rdx-colors-prm-12);
    }

    h4:not(.unstyled) {
      font-weight: 400;
      font-size: 1.5rem;
      line-height: 3rem;
      color: var(--rdx-colors-prm-12);
    }

    figure {
      width: 100%;
      max-width: 100%;
    }

    figure img {
      width: 100%;
      max-width: 100%;
    }

    figcaption {
      text-align: center;
      color: var(--rdx-colors-gray-11);
      font-style: italic;
      border-top: 1px solid var(--rdx-colors-gray5);
      margin-top: 1em;
      padding-top: 1em;
    }

    iframe:not([class]) {
      max-width: 100%;
      width: 100%;
    }

    iframe:not([class])[src^="https://www.youtube"]
    {
      aspect-ratio: 16/9;
    }

    video {
      background: rgb(59, 59, 59);
      margin-block: 3rem;
    }
  }
</style>
