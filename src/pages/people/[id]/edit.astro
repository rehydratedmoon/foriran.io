---
import GlobalLayout from '@layouts/GlobalLayout.astro';
import executeQuery from '@db/exQ';
import Form from '../_Form.astro';

import { z } from 'zod';
if (!import.meta.env.DEV) {
  Astro.redirect('/404');
}
let record = null;
let errors = null;
let serverError = null;
let isRecordAdded = null;

  const { id } = Astro.params;
  let { records, error } = await executeQuery(`MATCH (n:Person { id: $id})  RETURN n`, { id });
  if (error) serverError = error;
  record = records?.[0]?.get(0);

const schema = z.object({
  name: z.string().min(1, 'Please enter a name.'),
  nameFa: z.string().min(1, 'Please enter the name in Farsi.'),
  image: z.string().min(1, 'Please enter the image URL.'),
  instagram: z.string().nullable().optional(),
});

if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const formValues = Object.fromEntries(formData.entries());
    const safeParse = schema.safeParse(formValues);
    if (!safeParse.success) {
      errors = safeParse.error.format();
      throw '';
    }
    if (safeParse.success) {
      const properties = formValues;
      const { records, error } = await executeQuery('MATCH (n:Person) WHERE n.id = $id SET n = $properties RETURN n', {
        properties,
        id,
      });

      if (error) serverError = error;
      record = records?.[0]?.get(0);
      isRecordAdded = true;
    }
  } catch (err) {
    serverError = err;
  }
}
---

<GlobalLayout title='add person'>
  <h2 class='H2'>Edit</h2>

  <Form errors={errors} initialValues={record?.properties} buttonText='Update' />
  {
    serverError && (
      <div>
        <h2>Server Error</h2>
        <pre class='rd-xl b-1 b-dashed b-gray5 bg-gray2 c-gray11 p-4'>{JSON.stringify(serverError, null, 2)}</pre>
      </div>
    )
  }
  {
    isRecordAdded && (
      <div class='snack-success'>
        <h2>Record edited  Successfully</h2>
      </div>
    )
  }
</GlobalLayout>
