// import type {} from "next-themes";
// import { HTMLAttributes } from "react";
// import { useStore } from '@nanostores/solid';
// import { theme } from '../stores/sideMenuStore';
// import useColorScheme from "@/hooks/useColorScheme";
// import Icon from "./Icon.astro";
  ---

import { ThemeSwitch } from "astro-color-scheme";

// const textMap = {
//   light: "تم روشن",
//   dark: "تم تاریک",
//   system: "تم سیستم",
// };
// const iconMap = {
//   light: "i-ph-sun",
//   dark: "i-ph-moon",
// };
// const ThemeToggler = ({ hasText = true, ...props }: { hasText?: boolean } & HTMLAttributes<HTMLButtonElement>) => {

  // const $theme = useStore(theme);

  // const { theme, resolvedTheme, toggleTheme, hasMountedInBrowser } = useColorScheme();

  // return (
  //   <button onClick={(e) => theme.set("light")} {...props} title={textMap[hasMountedInBrowser ? $theme() : "system"]}>
  //     <Icon name={iconMap[ $theme()]} class={`${hasText ? "opacity-50" : ""} `} />
  //     {hasText && <span class="c-gray11 fw-300">{textMap[hasMountedInBrowser ? $theme() : "system"]}</span>}
  //   </button>
  // );


  const {hasText} = Astro.props;
  ---
  <div>
   <ThemeSwitch strategy="select" defaultTheme="system">
    <select>
      <option value="system">System</option>
      <option value="dark">Dark</option>
      <option value="light">Light</option>
    </select>
  </ThemeSwitch>
</div>
// };

// export default ThemeToggler;
