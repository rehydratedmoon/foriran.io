---
interface Props {
  href: string;
  class?: string;
  [key: string]: any;
}

const currentPath = Astro.url.pathname;
const props = Astro.props;

let isInPath = props.href === currentPath;
let isInSubPath = isInPath === false && currentPath.startsWith(props.href as string);
---

<>
  {isInPath && <a href={props.href} data-menu-link aria-current='page' />}
  {isInSubPath && <a href={props.href} data-menu-link data-in-sub-path />}
  {!isInPath && !isInSubPath && <a href={props.href} data-menu-link />}
</>

<script>
  const menuLinks = document.querySelectorAll('[data-menu-link]');
  menuLinks.forEach((menuLink) => {
    menuLink.addEventListener('click', () => {
      document.documentElement.style.setProperty('--is-side-menu-open', 'var(--FALSE)');
    });
  });
</script>
