---
// <!-- import React, {useEffect, useState} from "react"; -->
// <!-- import {usePWA} from "./PWAProvider"; -->

// const InstallPWAButton = () => {
//  const [supportsPWA, setSupportsPWA] = useState(false);
//  const [promptEvent, setPromptEvent] = useState<any>(null);
---

<div class='space-y-6'>
  <button class='btn-prm fw-500 bf-i-ph-download-simple' id='pwa-install-button' onClick=''> نصب اپلیکیشن</button>
  <!-- {

      <div class='snack-warning'>
        <p>مرورگر‌ شما از نصب PWA پیشتیبانی نمی‌کند.</p>
        <p>می‌توانید از مرورگر کروم برای اندروید و ویندوز، و مرورگر سافاری برای iOS استفاده کنید.</p>
        <p>
          فهرست مرورگرهای دارای امکانات PWA را
          {` `}
          <a href='https://caniuse.com/web-app-manifest'> از اینجا</a>
          {` `}
          ببینید.
        </p>
      </div>
  } -->
</div>

<script>
  let installButton = document.createElement('button');
  let prompt;
  window.addEventListener('beforeinstallprompt', function (e) {
    // Prevent the mini-infobar from appearing on mobile
    e.preventDefault();
    // Stash the event so it can be triggered later.
    prompt = e;
  });

  installButton.addEventListener('click', function async () {
    if (!prompt) return;
    const res = await prompt.userChoice();
    if (res === 'accepted') {
      installButton.style.display = 'none';
    }
  });

  window.addEventListener('appinstalled', async function (e) {
  });

  let installable = true;
  if (!('serviceWorker' in navigator)) {
    installable = false;
  }

  let installed = false;

//check when the page is loaded if it matches one of the PWA display modes
window.addEventListener('DOMContentLoaded', function(){
   if (
    navigator.standalone ||
    window.matchMedia('(display-mode: standalone)').matches ||
    window.matchMedia('(display-mode: fullscreen)').matches || 
    window.matchMedia('(display-mode: minimal-ui)').matches)
     {
     installed = true;
    }
});

//but also add a listener. After app installation on desktop, the app will open in their own window right away.
window.addEventListener('DOMContentLoaded', function(){
   window.matchMedia('(display-mode: standalone)').addListener(function(e){
     if (e.matches) { installed = true;}
   });
   window.matchMedia('(display-mode: fullscreen)').addListener(function(e){
     if (e.matches) { installed = true;}
   });
   window.matchMedia('(display-mode: minimal-ui)').addListener(function(e){
     if (e.matches) { installed = true; }
   });
 });


 window.addEventListener('appinstalled', function(){
  document.cookie = "appinstalled=true;expires=Tue, 30 Mar 2023 23:59:59 GMT;path=/";
})

window.addEventListener('beforeinstallprompt', function(){
  document.cookie = "appinstalled=false;expires=Tue, 30 Mar 2023 23:59:59 GMT;path=/";
})

if ('getInstalledRelatedApps' in window.navigator) {
   let relatedApps = await window.navigator.getInstalledRelatedApps();
   if (relatedApps.length > 0){
      installed = true;
   }
   else {
     installed = false;
   }
}


//a somewhat verbose approach to iOS detection
function isThisDeviceRunningiOS(){
  if (['iPad Simulator', 'iPhone Simulator','iPod Simulator', 'iPad','iPhone','iPod'].includes(navigator.platform))
   return true;
  }
  // iPad on iOS 13  
  else if (navigator.userAgent.includes("Mac") && "ontouchend" in document)){
    return true;
  }   
  else {
    return false;
  }
}
</script>
